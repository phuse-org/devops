---
title: "Check code coverage"
description: |
  This workflow measures code coverage for unit tests and reports the code coverage as a percentage of the total number of lines covered by unit tests vs. the total number of lines in the codebase.
categories:
  - Testing
  - R
author: Pharmaverse
date: 2023-08-01
image: https://covr.r-lib.org/reference/figures/logo.png
toc: true
---

:::{.callout-note style="margin-top: 0rem;" collapse="false"}
## About the gh-action

**Example of use:** [falcon R package](https://github.com/pharmaverse/falcon/blob/use-phuse-cicd/.github/workflows/phuse-basics.yml)
:::

## Why should I use this?

This workflow measures code coverage for unit tests and reports the code
coverage as a percentage of the *total number of lines covered by unit
tests* vs.Â the *total number of lines in the codebase* in an R package.

It's important to note that code coverage is only telling you if a test exists, not that the test is
testing all that should be tested against that line of code.

For information on how to add testing to R packages, [R-pkgs.org](https://r-pkgs.org/testing-basics.html) covers
setting up tests with `testthat`.

## How do I set it up?

You can call this action via adding a call to this job in a GitHub Actions workflow. A minimal example
that runs this on commits to master is:

```yaml
name: Code coverage
# sourced from phuse-org/devops-toolkit

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  coverage:
    name: Code Coverage
    uses: phuse-org/devops-toolkit/.github/workflows/test-coverage.yml@main
```

## The deets

The [`covr`](https://covr.r-lib.org/) R package is used to calculate the coverage.
